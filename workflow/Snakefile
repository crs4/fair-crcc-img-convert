
# Main entrypoint of the workflow. 

import os
from pathlib import Path

from snakemake.utils import min_version


##### set minimum snakemake version #####
min_version("6.5.0")


# Run as:
# snakemake --snakefile ./img-convert.smk --profile ./profile --configfile zenbanc_config.yml --use-singularity --cores --verbose
#
# The configuration must specify the input and output directory trees as
# `img_directory` and `output_storage`

##### Load rules #####


include: "rules/common.smk"
include: "rules/img_conversion.smk"
include: "rules/checksumming.smk"
include: "rules/encryption.smk"


###### Workflow start ######


configure_environment()

source_slides = glob_source_paths()
log(len(source_slides), "source slides are: ", [ str(s) for s in source_slides ])


##### Rules #####


rule all_encrypted_tiffs:
    input:
        encrypted_tiffs =  \
            [ Path("c4gh") / s.with_suffix('.ome.tiff' + new_suffix)
                for s in source_slides for new_suffix in ('.c4gh', '.c4gh.sha') ],
        checksums = "tiffs/tiff_checksums",


rule all_tiffs:
    input:
        tiffs = [ Path("tiffs") / s.with_suffix('.ome.tiff') for s in source_slides ],
        checksums = "tiffs/tiff_checksums",


rule all_tiff_checksums:
    input:
        tiffs = [ t + '.sha' for t in rules.all_tiffs.input.tiffs ],
    output:
        "tiffs/tiff_checksums"
    log:
        "tiffs/tiff_checksums.log"
    resources:
        mem_mb = 512
    container:
        "docker://ilveroluca/raw2ometiff:0.3.0"
    shell:
        """
        cat {input:q} | sort > {output:q} 2> {log:q}
        """
